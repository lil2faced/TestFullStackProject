services:
  frontend:
    build: ./Frontend
    container_name: frontend-build
  webserver:
    build: ./WebServer
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html  # Статика
    depends_on:
      - frontend
    container_name: webserver-build
  postgres:
    image: postgres:latest
    container_name: postgres-db
    env_file:
      - .env  
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis-cache
    volumes:
      - redis_data:/data
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-broker
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "15672:15672"  # Web-интерфейс
      - "5672:5672"    # AMQP порт
volumes:
  postgres_data:
  redis_data: